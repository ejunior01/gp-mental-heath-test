services:
  survey_frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      VITE_API_URL: "http://survey_backend:3001"
    depends_on:
      survey_backend:
        condition: service_healthy
    networks:
      - survey-network
    restart: unless-stopped
    mem_limit: ${FRONTEND_MEM_LIMIT:-512m}
    mem_reservation: ${FRONTEND_MEM_RESERVATION:-256m}
    cpus: ${FRONTEND_CPUS:-0.5}
    deploy:
      resources:
        limits:
          cpus: "${FRONTEND_CPUS:-0.5}"
          memory: "${FRONTEND_MEM_LIMIT:-512m}"
      update_config:
        order: start-first
    read_only: true

  survey_backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    environment:
      DATABASE_URL: "${DATABASE_URL}"
    depends_on:
      survey_database:
        condition: service_healthy
      survey-queue:
        condition: service_healthy
    networks:
      - survey-network
    volumes:
      - survey-storage:/usr/src/app
    restart: unless-stopped
    mem_limit: ${BACKEND_MEM_LIMIT:-1g}
    mem_reservation: ${BACKEND_MEM_RESERVATION:-512m}
    cpus: ${BACKEND_CPUS:-1.0}
    deploy:
      resources:
        limits:
          cpus: "${BACKEND_CPUS:-1.0}"
          memory: "${BACKEND_MEM_LIMIT:-1g}"
      update_config:
        order: start-first
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

  survey_worker:
    build:
      context: ../worker
      dockerfile: Dockerfile
    environment:
      RABBITMQ_USERNAME: "${RABBITMQ_DEFAULT_USER:-guest}"
      RABBITMQ_PASSWORD: "${RABBITMQ_DEFAULT_PASS:-guest}"
      RABBITMQ_QUEUE: "survey_upload_queue"
      RABBITMQ_PORT: "5672"
      RABBITMQ_HOST: "survey_queue"
    depends_on:
      survey-queue:
        condition: service_healthy
    networks:
      - survey-network
    volumes:
      - survey-storage:/usr/src/app
    restart: unless-stopped
    mem_limit: ${WORKER_MEM_LIMIT:-512m}
    mem_reservation: ${WORKER_MEM_RESERVATION:-256m}
    cpus: ${WORKER_CPUS:-0.5}
    deploy:
      resources:
        limits:
          cpus: "${WORKER_CPUS:-0.5}"
          memory: "${WORKER_MEM_LIMIT:-512m}"
      update_config:
        order: start-first

  survey_database:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-example}"
      POSTGRES_DB: "${POSTGRES_DB:-survey}"
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - survey-network
    restart: unless-stopped
    mem_limit: ${DATABASE_MEM_LIMIT:-1g}
    mem_reservation: ${DATABASE_MEM_RESERVATION:-512m}
    cpus: ${DATABASE_CPUS:-1.0}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: "${DATABASE_CPUS:-1.0}"
          memory: "${DATABASE_MEM_LIMIT:-1g}"

  survey-queue:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER:-guest}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS:-guest}"
      RABBITMQ_DEFAULT_VHOST: "/"
    networks:
      - survey-network
    restart: unless-stopped
    mem_limit: ${RABBITMQ_MEM_LIMIT:-512m}
    mem_reservation: ${RABBITMQ_MEM_RESERVATION:-256m}
    cpus: ${RABBITMQ_CPUS:-0.5}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: "${RABBITMQ_CPUS:-0.5}"
          memory: "${RABBITMQ_MEM_LIMIT:-512m}"

volumes:
  pg-data:
    driver: local
  survey-storage:
    driver: local

networks:
  survey-network:
    driver: bridge